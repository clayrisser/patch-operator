
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: patches.patch.bitspur.com
spec:
  group: patch.bitspur.com
  names:
    kind: Patch
    listKind: PatchList
    plural: patches
    singular: patch
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Patch is the Schema for the patches API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: the desired state of the patch
            properties:
              patches:
                description: a list of patches to be applied in order
                items:
                  description: you can read more about kubernetes patches at the following
                    link https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch
                  properties:
                    applyIf:
                      description: apply patch if criteria met
                      items:
                        properties:
                          jsonPath:
                            description: the json patch to check the criteria against
                            type: string
                          regex:
                            description: an extended grep compatible regular expression
                            type: string
                          target:
                            description: the target to check criteria against. if
                              no target specified, the target being patched will be
                              used
                            properties:
                              apiVersion:
                                type: string
                              group:
                                type: string
                              kind:
                                type: string
                              name:
                                type: string
                              namespace:
                                type: string
                              version:
                                type: string
                            required:
                            - name
                            type: object
                        type: object
                      type: array
                    patch:
                      description: the patch to apply
                      type: string
                    target:
                      description: the resource to patch
                      properties:
                        apiVersion:
                          type: string
                        group:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                        version:
                          type: string
                      required:
                      - name
                      type: object
                    type:
                      description: you can read more about the patch types at the
                        following link https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/#use-a-json-merge-patch-to-update-a-deployment
                      type: string
                    waitForResource:
                      description: wait for the resource to exist
                      type: boolean
                    waitForTimeout:
                      description: wait for time in milliseconds before applying patch
                      type: integer
                  required:
                  - patch
                  - target
                  type: object
                type: array
            type: object
          status:
            description: PatchStatus defines the observed state of Patch
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
